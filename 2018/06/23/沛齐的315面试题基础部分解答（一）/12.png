<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin-when-crossorigin" />
    <meta name="description" content="原文地址：https://www.usblog.cc/blog/post/justzhl/b5cc9a05c7d2 问题一：以下的代码的输出将是什么? 说出你的答案并解释。 答案是 1 1 11 2 " />
    <meta property="og:description" content="原文地址：https://www.usblog.cc/blog/post/justzhl/b5cc9a05c7d2 问题一：以下的代码的输出将是什么? 说出你的答案并解释。 答案是 1 1 11 2 " />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>python面试题目 - I'm Hurley - 博客园</title>
    <link id="favicon" rel="shortcut icon" href="//common.cnblogs.com/favicon.svg" type="image/svg+xml" />
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=AkxtFnxO7hB3cfj06Voq6iU-Wl6PFInnmRz6Hm8LZ4o" />
    <link id="MainCss" rel="stylesheet" href="/skins/blacklowkey/bundle-blacklowkey.min.css?v=1gj9-XJKL9BZFkjdvROYQPiPWjQXk-hsXXZGtqkfaSc" />
    <link id="highlighter-theme-cnblogs" type="text/css" rel="stylesheet" href="/css/hljs/cnblogs.css?v=yKPfCbE6NGwg5Jn8Cm5G98RHufDcX_NIbkGDyVPvWPQ" />
    <link type="text/css" rel="stylesheet" href="https://www.cnblogs.com/imhurley/custom.css?v=r1iiQ1luTd0UNoI/jGImV0UqSZs=" />
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/blacklowkey/bundle-blacklowkey-mobile.min.css?v=MM4QkBDNzquY4s9xTmGzFmRRoS_nQCVUE-vdF9dD-Uk" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/imhurley/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/imhurley/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/imhurley/wlwmanifest.xml" />
    <script>
        var currentBlogId = 87117;
        var currentBlogApp = 'imhurley';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var isBlogOwner = false;
        var skinName = 'BlackLowKey';
        var visitorUserId = '';
        var hasCustomScript = true;
        try {
            if (hasCustomScript && document.referrer && document.referrer.indexOf('baidu.com') >= 0) {
                Object.defineProperty(document, 'referrer', { value: '' });
                Object.defineProperty(Document.prototype, 'referrer', { get: function(){ return ''; } });
            }
        } catch(error) { }
        window.codeHighlightEngine = 1;
        window.enableCodeLineNumber = false;
        window.codeHighlightTheme = 'cnblogs';
    </script>
        <script>
            var currentPostDateAdded = '2014-08-07 23:10';
        </script>
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=GHFECM95IPJz-qIaNL8VEXFU0jq_lBZTwHOBGHBzNGw"></script>
    
    
    
</head>
<body class="skin-blacklowkey has-navbar has-bannerbar">
    <a name="top"></a>
        <a href="https://click.aliyun.com/m/1000325865/" onclick="countCreativeClicks('C0-阿里云-采购季')" target="_blank" rel="nofollow">
            <div class="bannerbar forpc" style="background-size: contain; background-image: url(https://img2022.cnblogs.com/blog/35695/202202/35695-20220228193526385-1206823345.jpg);">
                <img src="https://img2022.cnblogs.com/blog/35695/202203/35695-20220319081221443-1464720067.jpg" onload="countCreativeImpressions('C0-阿里云-采购季');" />
            </div>
        </a>
    <div id="top_nav" class="navbar forpc">
        <nav id="nav_main" class="navbar-main">
            <ul id="nav_left" class="navbar-list navbar-left">
                <li class="navbar-branding">
                    <a href="https://www.cnblogs.com/" title="开发者的网上家园" role="banner">
                            <img src="/images/logo.svg?v=R9M0WmLAIPVydmdzE2keuvnjl-bPR7_35oHqtiBzGsM" alt="博客园Logo" />
                    </a>
                </li>
                <li><a href="/" onclick="countClicks('skin-navbar-sitehome')">首页</a></li>
                <li><a href="https://news.cnblogs.com/" onclick="countClicks('nav', 'skin-navbar-news')">新闻</a></li>
                <li><a href="https://q.cnblogs.com/" onclick="countClicks('nav', 'skin-navbar-q')">博问</a></li>
                <li><a id="nav_brandzone" href="https://brands.cnblogs.com/huawei" onclick="countClicks('nav', 'skin-navbar-brands')">专区</a></li>
                <li><a href="https://ing.cnblogs.com/" onclick="countClicks('nav', 'skin-navbar-ing')">闪存</a></li>
                <li><a href="https://edu.cnblogs.com/" onclick="countClicks('nav', 'skin-navbar-edu')">班级</a></li>
            </ul>
            <ul id="nav_right" class="navbar-list navbar-right">
                <li>
                    <form id="zzk_search" class="navbar-search" action="https://zzk.cnblogs.com/s" method="get" role="search">
                        <input name="w" id="zzk_search_input" placeholder="代码改变世界" type="search" tabindex="3" />
                        <button type="submit" id="zzk_search_button">
                            <img src="/images/aggsite/search.svg" alt="搜索" />
                        </button>
                    </form>
                </li>
                <li id="navbar_login_status" class="navbar-list">
                    <a class="navbar-user-info navbar-blog" href="https://i.cnblogs.com/EditPosts.aspx?opt=1" alt="写随笔" title="写随笔">
                        <img id="new_post_icon" class="navbar-icon" src="/images/aggsite/newpost.svg" alt="写随笔" />
                    </a>
                    <a id="navblog-myblog-icon" class="navbar-user-info navbar-blog" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx" alt="我的博客" title="我的博客">
                        <img id="myblog_icon" class="navbar-icon" src="/images/aggsite/myblog.svg" alt="我的博客" />
                    </a>
                    <a class="navbar-user-info navbar-message navbar-icon-wrapper" href="https://msg.cnblogs.com/" alt="短消息" title="短消息">
                        <img id="msg_icon" class="navbar-icon" src="/images/aggsite/message.svg?v=J0WS2P2iPgaIVgXxcAhliw4AFZIpaTWxtdoNAv9eiCA" alt="短消息" />
                        <span id="msg_count" style="display: none"></span>
                    </a>
                    <a id="navbar_lite_mode_indicator" data-current-page="blog" style="display: none" href="javascript:void(0)" alt="简洁模式" title="简洁模式启用，您在访问他人博客时会使用简洁款皮肤展示">
                        <img class="navbar-icon" src="/images/aggsite/lite-mode-on.svg" alt="简洁模式" />
                    </a>
                    <div id="user_info" class="navbar-user-info dropdown">
                        <a class="dropdown-button" href="https://home.cnblogs.com/">
                            <img id="user_icon" class="navbar-avatar" src="/images/aggsite/avatar-default.svg" alt="用户头像" />
                        </a>
                        <div class="dropdown-menu">
                            <a id="navblog-myblog-text" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx">我的博客</a>
                            <a href="https://home.cnblogs.com/">我的园子</a>
                            <a href="https://account.cnblogs.com/settings/account">账号设置</a>
                            <a href="javascript:void(0)" id="navbar_lite_mode_toggle" title="简洁模式会使用简洁款皮肤显示所有博客">
    简洁模式 <img id="navbar_lite_mode_on" src="/images/lite-mode-check.svg" class="hide" /><span id="navbar_lite_mode_spinner" class="hide">...</span>
</a>
                            <a href="javascript:void(0)" onclick="account.logout();">退出登录</a>
                        </div>
                    </div>
                    <a class="navbar-anonymous" href="https://account.cnblogs.com/signup">注册</a>
                    <a class="navbar-anonymous" href="javascript:void(0);" onclick="account.login()">登录</a>
                </li>
            </ul>
        </nav>
    </div>

    
    <!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/imhurley/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/imhurley/">I'm Hurley</a>
</h1>
<h2>a nice day , get love ~</h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/imhurley/">
首页</a>
</li>
<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/I%27m%20Hurley">
联系</a></li>
<li>
<a id="blog_nav_rss" class="menu" href="javascript:void(0)" data-rss="https://www.cnblogs.com/imhurley/rss/">
订阅</a>
<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			<div id="blog_stats_place_holder"><script>loadBlogStats();</script></div>
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->
<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		<div id="post_detail">
    <!--done-->
    <div id="topics">
        <div class="post">
            <h1 class = "postTitle">
                
<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/imhurley/p/3898289.html">
    <span role="heading" aria-level="2">python面试题目</span>
    



</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p>原文地址：<a href="https://www.usblog.cc/blog/post/justzhl/b5cc9a05c7d2" target="_blank" rel="noopener">https://www.usblog.cc/blog/post/justzhl/b5cc9a05c7d2</a></p>
<p>问题一：以下的代码的输出将是什么? 说出你的答案并解释。</p>
<div class="cnblogs_Highlighter">
<pre class="brush:python;gutter:true;">class Parent(object):
    x = 1

class Child1(Parent):
    pass

class Child2(Parent):
    pass

print Parent.x, Child1.x, Child2.x
Child1.x = 2
print Parent.x, Child1.x, Child2.x
Parent.x = 3
print Parent.x, Child1.x, Child2.x
</pre>
</div>
<p>答案是</p>
<p>1 1 1<br>1 2 1<br>3 2 3</p>
<p>使你困惑或是惊奇的是关于最后一行的输出是&nbsp;<code>3 2 3</code>&nbsp;而不是&nbsp;<code>3 2 1</code>。为什么改变了&nbsp;<code>Parent.x</code>&nbsp;的值还会改变&nbsp;<code>Child2.x</code>&nbsp;的值，但是同时&nbsp;<code>Child1.x</code>&nbsp;值却没有改变？</p>
<p>这个答案的关键是，在 Python 中，类变量在内部是作为字典处理的。如果一个变量的名字没有在当前类的字典中发现，将搜索祖先类（比如父类）直到被引用的变量名被找到（如果这个被引用的变量名既没有在自己所在的类又没有在祖先类中找到，会引发一个&nbsp;<code>AttributeError</code>&nbsp;异常 ）。</p>
<p>因此，在父类中设置&nbsp;<code>x = 1</code>&nbsp;会使得类变量&nbsp;<code>X</code>&nbsp;在引用该类和其任何子类中的值为 1。这就是因为第一个 print 语句的输出是&nbsp;<code>1 1 1</code>。</p>
<p>随后，如果任何它的子类重写了该值（例如，我们执行语句&nbsp;<code>Child1.x = 2</code>），然后，该值仅仅在子类中被改变。这就是为什么第二个&nbsp;<code>print</code>&nbsp;语句的输出是&nbsp;<code>1 2 1</code>。</p>
<p>最后，如果该值在父类中被改变（例如，我们执行语句&nbsp;<code>Parent.x = 3</code>），这个改变会影响到任何未重写该值的子类当中的值（在这个示例中被影响的子类是&nbsp;<code>Child2</code>）。这就是为什么第三个&nbsp;<code>print</code>&nbsp;输出是&nbsp;<code>3 2 3</code>。</p>
<p>&nbsp;</p>
<h2>问题二：以下的代码的输出将是什么? 说出你的答案并解释？</h2>
<p>&nbsp;</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">def</span><span style="color: rgba(0, 0, 0, 1)"> div1(x,y):
    </span><span style="color: rgba(0, 0, 255, 1)">print</span>(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">%s/%s = %s</span><span style="color: rgba(128, 0, 0, 1)">"</span> % (x, y, x/<span style="color: rgba(0, 0, 0, 1)">y))

</span><span style="color: rgba(0, 0, 255, 1)">def</span><span style="color: rgba(0, 0, 0, 1)"> div2(x,y):
    </span><span style="color: rgba(0, 0, 255, 1)">print</span>(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">%s//%s = %s</span><span style="color: rgba(128, 0, 0, 1)">"</span> % (x, y, x//<span style="color: rgba(0, 0, 0, 1)">y))

div1(</span>5,2<span style="color: rgba(0, 0, 0, 1)">)
div1(</span>5.,2<span style="color: rgba(0, 0, 0, 1)">)
div2(</span>5,2<span style="color: rgba(0, 0, 0, 1)">)
div2(</span>5.,2.)</pre>
</div>
<p>&nbsp;</p>
<p>5/2 = 2<br>5.0/2.0=2.5<br>5/2=2<br>5/2=2</p>
<p><strong>答案</strong></p>
<p>这个答案实际依赖于你使用的是 Python 2 还是 Python 3。</p>
<p>在 Python 3 中，期望的输出是：</p>
<pre class="cs"><span class="number">5/<span class="number">2 = <span class="number">2.5
<span class="number">5.0/<span class="number">2 = <span class="number">2.5
<span class="number">5<span class="comment">//2 = 2
<span class="number">5.0<span class="comment">//2.0 = 2.0
</span></span></span></span></span></span></span></span></span></span></pre>
<p>在 Python 2 中，尽管如此，以上代码的输出将是：</p>
<pre class="cs"><span class="number">5/<span class="number">2 = <span class="number">2
<span class="number">5.0/<span class="number">2 = <span class="number">2.5
<span class="number">5<span class="comment">//2 = 2
<span class="number">5.0<span class="comment">//2.0 = 2.0
</span></span></span></span></span></span></span></span></span></span></pre>
<p>默认，如果两个操作数都是整数，Python 2 自动执行整型计算。结果，<code>5/2</code>&nbsp;值为&nbsp;<code>2</code>，然而&nbsp;<code>5./2</code>&nbsp;值为 ```2.5``。</p>
<p>注意，尽管如此，你可以在 Python 2 中重载这一行为（比如达到你想在 Python 3 中的同样结果），通过添加以下导入：</p>
<pre class="haskell"><span class="title">from __future__ <span class="import"><span class="keyword">import division
</span></span></span></pre>
<p>也需要注意的是“双划线”（//）操作符将一直执行整除，而不管操作数的类型，这就是为什么&nbsp;<code>5.0//2.0</code>&nbsp;值为&nbsp;<code>2.0</code>。</p>
<blockquote>
<p>注： 在 Python 3 中，<code>/</code>&nbsp;操作符是做浮点除法，而&nbsp;<code>//</code>&nbsp;是做整除（即商没有余数，比如 10 // 3 其结果就为 3，余数会被截除掉，而&nbsp;<code>(-7) // 3</code>&nbsp;的结果却是&nbsp;<code>-3</code>。这个算法与其它很多编程语言不一样，需要注意，它们的整除运算会向0的方向取值。而在 Python 2 中，<code>/</code>&nbsp;就是整除，即和 Python 3 中的&nbsp;<code>//</code>&nbsp;操作符一样，）</p>
<p>&nbsp;</p>
</blockquote>
<h2>问题三：以下代码将输出什么?</h2>
<pre class="cpp"><span class="built_in">list = [<span class="string">'a', <span class="string">'b', <span class="string">'c', <span class="string">'d', <span class="string">'e']
print <span class="built_in">list[<span class="number">10:]
</span></span></span></span></span></span></span></span></pre>
<p><strong>答案</strong></p>
<p>以上代码将输出&nbsp;<code>[]</code>，并且不会导致一个&nbsp;<code>IndexError</code>。</p>
<p>正如人们所期望的，试图访问一个超过列表索引值的成员将导致&nbsp;<code>IndexError</code>（比如访问以上列表的&nbsp;<code>list[10]</code>）。尽管如此，试图访问一个列表的以超出列表成员数作为开始索引的切片将不会导致&nbsp;<code>IndexError</code>，并且将仅仅返回一个空列表。</p>
<p>一个讨厌的小问题是它会导致出现 bug ，并且这个问题是难以追踪的，因为它在运行时不会引发错误。</p>
<div class="post-content fmt">
<h2>问题四：以下的代码的输出将是什么? 说出你的答案并解释？</h2>
<pre class="python"><span class="function"><span class="keyword">def <span class="title">multipliers<span class="params">():
    <span class="keyword">return [<span class="keyword">lambda x : i * x <span class="keyword">for i <span class="keyword">in range(<span class="number">4)]

<span class="keyword">print [m(<span class="number">2) <span class="keyword">for m <span class="keyword">in multipliers()]
</span></span></span></span></span></span></span></span></span></span></span></span></span></pre>
<p><strong>你将如何修改&nbsp;<code>multipliers</code>&nbsp;的定义来产生期望的结果</strong></p>
<p><strong>答案</strong></p>
<p>以上代码的输出是&nbsp;<code>[6, 6, 6, 6]</code>&nbsp;（而不是&nbsp;<code>[0, 2, 4, 6]</code>）。</p>
<p>这个的原因是 Python 的闭包的后期绑定导致的&nbsp;<a href="http://en.wikipedia.org/wiki/Late_binding" rel="noopener" target="_blank">late binding</a>，这意味着在闭包中的变量是在内部函数被调用的时候被查找。所以结果是，当任何&nbsp;<code>multipliers()</code>&nbsp;返回的函数被调用，在那时，<code>i</code>&nbsp;的值是在<strong>它被调用时的周围作用域中查找</strong>，到那时，无论哪个返回的函数被调用，<code>for</code>&nbsp;循环都已经完成了，<code>i</code>&nbsp;最后的值是&nbsp;<code>3</code>，因此，每个返回的函数&nbsp;<code>multiplies</code>&nbsp;的值都是 3。因此一个等于 2 的值被传递进以上代码，它们将返回一个值 6 （比如： 3 x 2）。</p>
<p>（顺便说下，正如在&nbsp;<a href="http://docs.python-guide.org/en/latest/writing/gotchas/" rel="noopener" target="_blank">The Hitchhiker’s Guide to Python</a>&nbsp;中指出的，这里有一点普遍的误解，是关于&nbsp;<code>lambda</code>&nbsp;表达式的一些东西。一个&nbsp;<code>lambda</code>&nbsp;表达式创建的函数不是特殊的，和使用一个普通的&nbsp;<code>def</code>&nbsp;创建的函数展示的表现是一样的。）</p>
<p>这里有两种方法解决这个问题。</p>
<p>最普遍的解决方案是创建一个闭包，通过使用默认参数立即绑定它的参数。例如：</p>
<pre class="python"><span class="function"><span class="keyword">def <span class="title">multipliers<span class="params">():
    <span class="keyword">return [<span class="keyword">lambda x, i=i : i * x <span class="keyword">for i <span class="keyword">in range(<span class="number">4)]
</span></span></span></span></span></span></span></span></span></pre>
<p>另外一个选择是，你可以使用&nbsp;<code>functools.partial</code>&nbsp;函数：</p>
<pre class="python"><span class="keyword">from functools <span class="keyword">import partial
<span class="keyword">from operator <span class="keyword">import mul

<span class="function"><span class="keyword">def <span class="title">multipliers<span class="params">():
    <span class="keyword">return [partial(mul, i) <span class="keyword">for i <span class="keyword">in range(<span class="number">4)]
</span></span></span></span></span></span></span></span></span></span></span></span></pre>
<h2>问题五：以下的代码的输出将是什么? 说出你的答案并解释？</h2>
<pre class="python"><span class="function"><span class="keyword">def <span class="title">extendList<span class="params">(val, list=[]):
    list.append(val)
    <span class="keyword">return list

list1 = extendList(<span class="number">10)
list2 = extendList(<span class="number">123,[])
list3 = extendList(<span class="string">'a')

<span class="keyword">print <span class="string">"list1 = %s" % list1
<span class="keyword">print <span class="string">"list2 = %s" % list2
<span class="keyword">print <span class="string">"list3 = %s" % list3
</span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre>
<p><strong>你将如何修改&nbsp;<code>extendList</code>&nbsp;的定义来产生期望的结果</strong></p>
<p>以上代码的输出为：</p>
<pre class="ini"><span class="setting">list1 = <span class="value">[<span class="number">10, 'a']
<span class="setting">list2 = <span class="value">[<span class="number">123]
<span class="setting">list3 = <span class="value">[<span class="number">10, 'a']
</span></span></span></span></span></span></span></span></span></pre>
<p>许多人会错误的认为&nbsp;<code>list1</code>&nbsp;应该等于&nbsp;<code>[10]</code>&nbsp;以及&nbsp;<code>list3</code>&nbsp;应该等于&nbsp;<code>['a']</code>。认为&nbsp;<code>list</code>&nbsp;的参数会在&nbsp;<code>extendList</code>&nbsp;每次被调用的时候会被设置成它的默认值&nbsp;<code>[]</code>。</p>
<p>尽管如此，实际发生的事情是，新的默认列表仅仅只在函数被定义时创建一次。随后当&nbsp;<code>extendList</code>&nbsp;没有被指定的列表参数调用的时候，其使用的是同一个列表。这就是为什么当函数被定义的时候，表达式是用默认参数被计算，而不是它被调用的时候。</p>
<p>因此，<code>list1</code>&nbsp;和&nbsp;<code>list3</code>&nbsp;是操作的相同的列表。而 ````list2<code>是操作的它创建的独立的列表（通过传递它自己的空列表作为</code>list``` 参数的值）。</p>
<p><strong><code>extendList</code>&nbsp;函数的定义可以做如下修改</strong>，但，当没有新的&nbsp;<code>list</code>&nbsp;参数被指定的时候，会总是开始一个新列表，这更加可能是一直期望的行为。</p>
<pre class="python"><span class="function"><span class="keyword">def <span class="title">extendList<span class="params">(val, list=None):
    <span class="keyword">if list <span class="keyword">is <span class="built_in">None:
        list = []
    list.append(val)
    <span class="keyword">return list
</span></span></span></span></span></span></span></span></pre>
<p>使用这个改进的实现，输出将是：</p>
<pre class="ini"><span class="setting">list1 = <span class="value">[<span class="number">10]
<span class="setting">list2 = <span class="value">[<span class="number">123]
<span class="setting">list3 = <span class="value">['a']</span></span></span></span></span></span></span></span></pre>
</div>
<p>&nbsp;</p>
<p>更多有趣文章，请关注:&nbsp;<a title="imhurley" href="http://www.factj.com" target="_blank" rel="noopener">我的博客，发现有趣的文章</a></p>
<p>　　</p>
<h2><span style="font-size: 14px; line-height: 1.5">&nbsp;</span></h2>
</div>
<div id="MySignature" role="contentinfo">
    博客签名：
Today I am Striving !
</div>
<div class="clear"></div>
<div id="blog_post_info_block" role="contentinfo">
    <div id="blog_post_info"></div>
    <div class="clear"></div>
    <div id="post_next_prev"></div>
</div>
            </div>
            <div class="postDesc">posted @ 
<span id="post-date">2014-08-07 23:10</span>&nbsp;
<a href="https://www.cnblogs.com/imhurley/">I'm Hurley</a>&nbsp;
阅读(<span id="post_view_count">13818</span>)&nbsp;
评论(<span id="post_comment_count">4</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=3898289" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(3898289);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '3898289', targetLink: 'https://www.cnblogs.com/imhurley/p/3898289.html', title: 'python面试题目' })">举报</a></div>
        </div>
	    
	    
    </div><!--end: topics 文章、评论容器-->
</div>

<script>
    var cb_entryId = 3898289, cb_entryCreatedDate = '2014-08-07 23:10', cb_postType = 1;
    var allowComments = true, cb_blogId = 87117, cb_blogApp = 'imhurley', cb_blogUserGuid = '0e4fb4d9-fa63-e011-a53f-842b2b196315';
    mermaidRender.render()
    markdown_highlight()
    zoomManager.apply("#cnblogs_post_body img:not(.code_img_closed):not(.code_img_opened)");
    updatePostStats(
            [cb_entryId],
            function(id, count) { $("#post_view_count").text(count) },
            function(id, count) { $("#post_comment_count").text(count) })
</script>
<a id="!comments"></a>
<div id="blog-comments-placeholder"></div>
<div id="comment_form" class="commentform">
    <a name="commentform"></a>
    <div id="divCommentShow"></div>
    <div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" onclick="return RefreshCommentList();" id="lnk_RefreshComments" runat="server" clientidmode="Static">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
    <div id="comment_form_container"></div>
    <div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
    <div id="cnblogs_ch"></div>
    <div id="opt_under_post"></div>
    <div id="cnblogs_c1" class="under-post-card">
            <div id='div-gpt-ad-1592365906576-0' style='width: 300px; height: 250px;'></div>
    </div>
    <div id="under_post_card1"></div>
        <div id="cnblogs_c2" class="under-post-card">
            <a href="https://developer.huawei.com/consumer/cn/forum/topic/0202829231837260098?fid=0102767778349500527&amp;ha_source=bokeyuan" rel="nofollow" target="_blank" onclick="countCreativeClicks('C2-华为专区-OpenHarmony开发板免费试用')">
                <img src="https://img2022.cnblogs.com/blog/35695/202203/35695-20220318182401018-1841084301.jpg" alt="" onload="countCreativeImpressions('C2-华为专区-OpenHarmony开发板免费试用')" />
            </a>
        </div>
    <div id="under_post_card2"></div>
    <div id="HistoryToday" class="under-post-card"></div>
    <script type="text/javascript">
        var commentManager = new blogCommentManager();
        commentManager.renderComments(0);
        fixPostBody();

                window.tocManager.displayDisableTocTips = false;
                window.tocManager.generateToc();
            setTimeout(function() { incrementViewCount(cb_entryId); }, 50);        deliverT2();
        deliverC1C2();
        loadNewsAndKb();
LoadPostCategoriesTags(cb_blogId, cb_entryId);        LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
        GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate, cb_postType);
        loadOptUnderPost();
        GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    </script>
</div>

	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->
	<div id="sideBar">
		<div id="sideBarMain">
			<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>
<div id="sidebar_c3"></div>
			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2022 I&#x27;m Hurley
<br /><span id="poweredby">Powered by .NET 6 on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    <div id="page_end_html">
        <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "//hm.baidu.com/hm.js?fa4110bc82feed544cbba65bf95499f4";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    </div>

    <input type="hidden" id="antiforgery_token" value="CfDJ8GsLOKiGtk1Au0UP1SouGdWu6iE-hdDQjLeYxnRh1Ag8YL7bBq8obNTQf6gHTbPgKM2yG18R2AkB6y5XUVEquPwz7OotHQDUM9HoANpNxC3_ZcMpyvlgzYVFLlBE9QjnBcZXuKGnd4MuoL9I1NfoIb4" />
    <script async src="https://www.googletagmanager.com/gtag/js?id=UA-476124-1"></script>
    <script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    var kv = getGACustom();
    if (kv) {
        gtag('set', kv);
    }
    gtag('config', 'UA-476124-1');
    </script>
    <script defer src="https://hm.baidu.com/hm.js?866c9be12d4a814454792b1fd0fed295"></script>
</body>
</html>